addpath('Shapelet_code_matlab/LogRegUtils');

TREES_PATH = 'Shapelet_Datasets/Trees/';
DATASET_PATH = 'Shapelet_Datasets/UCR_Master/';
OUTPUT_FILE = 'output-pca-pearson-normalization.csv';

fid = fopen(OUTPUT_FILE, 'w');
fprintf(fid, ['Name,Base Accuracy (Train),LR Accuracy (Train),' ...
    'PCA2 Accuracy (Train),PCA3 Accuracy (Train),' ...
    'PCA4 Accuracy (Train),PCA5 Accuracy (Train),' ...
    'Base Accuracy (Test),LR Accuracy (Test),PCA2 Accuracy (Test),' ...
    'PCA3 Accuracy (Test),PCA4 Accuracy (Test),' ... 
    'PCA5 Accuracy (Test),PCA1 Explained,PCA2 Explained,' ...
    'PCA3 Explained,PCA4 Explained,PCA5 Explained\n']);

tree_files = dir([TREES_PATH '*.txt']);

dataset_files = dir(DATASET_PATH);

for tree_index = 1:size(tree_files)
    tree_file = tree_files(tree_index).name
    dataset_name = tree_file(1:strfind(tree_file, '_')-1);
    
    train_file = [pwd '/' DATASET_PATH dataset_name '_TRAIN'];
    test_file = [pwd '/' DATASET_PATH dataset_name '_TEST'];
    
    DATASET_PATH
    dataset_name
    [TREES_PATH tree_file]
    
    if exist(train_file, 'file') && exist(test_file, 'file')
        try
            [bAccuracyTrain, pcaAccuracyTrain, bAccuracyTest, pcaAccuracyTest, pcaExplained] ... 
                = PCALogReg(...
                'DATASET_PATH', DATASET_PATH, ...
                'DATASET_NAME', dataset_name, ...
                'TREE_FILE', [TREES_PATH tree_file], ...
                'PEARSON_CORRELATION_FLAG', 1, ...
                'DATA_NORMALIZATION_FLAG', 1);
            
            fprintf(fid, '%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n', ...
                tree_file, ...
                bAccuracyTrain, ...
                pcaAccuracyTrain(1), ...
                pcaAccuracyTrain(2), ...
                pcaAccuracyTrain(3), ...
                pcaAccuracyTrain(4), ...
                pcaAccuracyTrain(5), ...
                bAccuracyTest, ...
                pcaAccuracyTest(1), ...
                pcaAccuracyTest(2), ...
                pcaAccuracyTest(3), ...
                pcaAccuracyTest(4), ...
                pcaAccuracyTest(5), ...
                pcaExplained(1), ...
                pcaExplained(2), ...
                pcaExplained(3), ...
                pcaExplained(4), ...
                pcaExplained(5));
        catch ME
            warning(ME.message)
            fprintf(fid, '%s, => ERROR: %s\n', train_file, ME.message);
        end
    else
        fprintf(fid, '%s, => associated data files could not be found\n');
    end
end
    
fclose(fid);