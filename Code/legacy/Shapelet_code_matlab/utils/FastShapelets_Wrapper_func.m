function [SHAPELET_COMMAND_OUTPUT] = FastShapelets_Wrapper_func(...
                          FAST_SHAPELETS_DATAPATH, ... 
                          TRAINING_FILENAME, ...
                          MAX_SHAPELET_LENGTH, MIN_SHAPELET_LENGTH, ... 
                          STEP_SIZE, R, DISTANCE_METRIC, CID_FLAG, ...
                          NORMALIZATION_FLAG, K, TREE_FILE)

% FASTSHAPELETS_WRAPPER_FUNC Calls the FastShapelet.exe C++ code.
%   Inputs:  
%   - FAST_SHAPELETS_DATAPATH:  Directory containing the fast shapelets c
%   code
%   - TRAINING_FILENAME:  Filename (with path) of the training file (must
%   be a matrix)
%
%   - Remaining inputs match the arguments for the C++ code
%   (Documented in the readme.md file)
%
%   Outputs
%   - SHAPELET_COMMAND_OUTPUT:  Command line output from running shapelet
%   discovery (FastShapelet.exe)

%% Load training file 
TRAINING_DATA = load(TRAINING_FILENAME);
NUM_TRAINING_ROWS= size(TRAINING_DATA,1);
NUM_TRAINING_CLASSES = size(unique(TRAINING_DATA(:,1)),1);

%% Build shapelet commmand from input parameters                      
shapelet_command = ['"' FAST_SHAPELETS_DATAPATH ...
    './FastShapelet" ' ...
    '"' TRAINING_FILENAME '" ' ...
    num2str(NUM_TRAINING_CLASSES) ' ' ...
    num2str(NUM_TRAINING_ROWS) ' ' ...
    num2str(MAX_SHAPELET_LENGTH) ' ' ...
    num2str(MIN_SHAPELET_LENGTH) ' ' ...
    num2str(STEP_SIZE) ' ' ...
    num2str(R) ' ' ...
    DISTANCE_METRIC ' ' ...
    num2str(CID_FLAG) ' ' ...
    num2str(NORMALIZATION_FLAG) ' ' ... 
    num2str(K) ' ' ...
    TREE_FILE];

%% Execute FastShapelets.exe command
disp(['Extracting shapelets for training file ' TRAINING_FILENAME '...'])
[status, SHAPELET_COMMAND_OUTPUT] = system(shapelet_command);
disp(['Done extracting shapelets for training file ' TRAINING_FILENAME])

end